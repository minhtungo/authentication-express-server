services:
  redis:
    image: redis:alpine
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./docker-data/redis:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - app_network
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker-data/db:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network
  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - ${EMAIL_SERVER_PORT}:1025
      - ${EMAIL_SERVER_HTTP_PORT}:8025
    volumes:
      - ./docker-data/mailhog:/maildir
    networks:
      - app_network
  s3-bucket:
    build: .
    restart: always
    ports:
      - ${AWS_S3_PORT}:9000
    command: "node s3.mjs"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ".:/home/app"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge